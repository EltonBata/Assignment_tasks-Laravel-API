openapi: 3.0.3
info:
  title: A-Tasks
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: 'Attempt to authenticate a new session.'
      operationId: attemptToAuthenticateANewSession
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: reinger.chanel@example.net
                password:
                  type: string
                  description: ''
                  example: "g'}ML#$zv"
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Destroy an authenticated session.'
      operationId: destroyAnAuthenticatedSession
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/forgot-password:
    post:
      summary: 'Send a reset link to the given user.'
      operationId: sendAResetLinkToTheGivenUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/reset-password:
    post:
      summary: "Reset the user's password."
      operationId: resetTheUsersPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: illo
                password:
                  type: string
                  description: ''
                  example: provident
              required:
                - token
                - password
      security: []
  /api/user/register:
    post:
      summary: 'Create a new registered user.'
      operationId: createANewRegisteredUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ozqjxrreongxhgzag
                apelido:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: uemfmfffmvlq
                data_nascimento:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2023-07-31T07:05:10'
                endereco:
                  type: string
                  description: 'Must not be greater than 512 characters.'
                  example: fhzgvzpgwhfmuzbbhgjhiam
                telefone:
                  type: string
                  description: 'Must be at least 9 characters.'
                  example: vripsgppbanpg
                role_id:
                  type: number
                  description: ''
                  example: 2.9
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: nklein@example.com
                password:
                  type: string
                  description: ''
                  example: 'V#>_V!qI'
              required:
                - nome
                - apelido
                - data_nascimento
                - endereco
                - telefone
                - role_id
                - email
                - password
      security: []
  '/api/email/verify/{id}/{hash}':
    get:
      summary: "Mark the authenticated user's email address as verified."
      operationId: markTheAuthenticatedUsersEmailAddressAsVerified
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the verify.'
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  /api/email/verification-notification:
    post:
      summary: 'Send a new email verification notification.'
      operationId: sendANewEmailVerificationNotification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user/password:
    put:
      summary: "Update the user's password."
      operationId: updateTheUsersPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user/confirmed-password-status:
    get:
      summary: 'Get the password confirmation status.'
      operationId: getThePasswordConfirmationStatus
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/confirm-password:
    post:
      summary: "Confirm the user's password."
      operationId: confirmTheUsersPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/admin:
    get:
      summary: 'Exibe uma lista dos administradores cadastrados.'
      operationId: exibeUmaListaDosAdministradoresCadastrados
      description: ''
      parameters:
        -
          in: query
          name: page_size
          description: 'por pagina. Padrao: 20'
          example: 16
          required: false
          schema:
            type: integer
            description: 'por pagina. Padrao: 20'
            example: 16
        -
          in: query
          name: page
          description: pagina.
          example: 3
          required: false
          schema:
            type: integer
            description: pagina.
            example: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 3
                  data: []
                  first_page_url: 'http://localhost/api/v1/admin?page=1'
                  from: null
                  last_page: 1
                  last_page_url: 'http://localhost/api/v1/admin?page=1'
                  links:
                    -
                      url: 'http://localhost/api/v1/admin?page=2'
                      label: '&laquo; Previous'
                      active: false
                    -
                      url: 'http://localhost/api/v1/admin?page=1'
                      label: '1'
                      active: false
                    -
                      url: null
                      label: 'Next &raquo;'
                      active: false
                  next_page_url: null
                  path: 'http://localhost/api/v1/admin'
                  per_page: 16
                  prev_page_url: 'http://localhost/api/v1/admin?page=2'
                  to: null
                  total: 3
                properties:
                  current_page:
                    type: integer
                    example: 3
                  data:
                    type: array
                    example: []
                  first_page_url:
                    type: string
                    example: 'http://localhost/api/v1/admin?page=1'
                  from:
                    type: string
                    example: null
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://localhost/api/v1/admin?page=1'
                  links:
                    type: array
                    example:
                      -
                        url: 'http://localhost/api/v1/admin?page=2'
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/admin?page=1'
                        label: '1'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          example: 'http://localhost/api/v1/admin?page=2'
                        label:
                          type: string
                          example: '&laquo; Previous'
                        active:
                          type: boolean
                          example: false
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://localhost/api/v1/admin'
                  per_page:
                    type: integer
                    example: 16
                  prev_page_url:
                    type: string
                    example: 'http://localhost/api/v1/admin?page=2'
                  to:
                    type: string
                    example: null
                  total:
                    type: integer
                    example: 3
      tags:
        - 'Gestao de Administradores'
      security: []
  '/api/v1/admin/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - 'Gestao de Administradores'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestao de Administradores'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Gestao de Administradores'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the admin.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'Gestao de Administradores'
    description: ''
